//1
	Integer num1, num2, cache


	Enviar "Introduce el primer número"
	Introduce num1

	Enviar "Introduce el segundo número"
	Introduce num2


	num1 = cache
	num1 = num2
	num2 = cache

	Enviar "El primer número ahora es " + num1
	Enviar "El segundo número ahora es " + num2



//2

	Integer num1, num2, result

	Enviar "Introduce un número"
	Introduce num1

	Enviar "Introduce un número"
	Introduce num2

		result = num1 + num2
			Eviar "La suma de " + num1 + " y " + num2 + "es:\n" + result

		result = num1 - num2
			Eviar "La resta de " + num1 + " y " + "num2" + "es:\n" + result

		result = num1 * num2
			Eviar "El producto de " + num1 + " y " + "num2" + "es:\n" + result

		result = num1 / num2
			Eviar "La división de " + num1 + " y " + "num2" + "es:\n" + result	

//3
	Integer num1, num2


	Enviar "Introduce un número"
	Introduce num1

	Enviar "Introduce un número"
	Introduce num2


	Si num1 es igual a num2
		Enviar "Los números son iguales"
	y Si num1 es mayor a num2
		Enviar "El primer número es mayor que es segundo"

	y Si num1 es menor a num2
		Enviar "El primer número es menor que es segundo"

	Si no
		Enviar "No se a tenido en cuenta"

// 4
	Integer num1, num2, num3


	Enviar "Introduce un número"
	Introduce num1

	Enviar "Introduce un número"
	Introduce num2

	Enviar "Introduce un número"
	Introduce num3


	Si num1 mayor que num2 y num3
		Enviar "El primer número es mayor que los demás"
	Si num2 mayor que num1 y num3
		Enviar "El segundo número es mayor que los demás"
	Si num3 mayor que num1 y num2
		Enviar "El tercernúmero es mayor que los demás"
	Si no
		Enviar "No se a tenido en cuenta"


//5
	Integer num1, num2, num3, result
	String excepcion


	Enviar "Introduce un número"
	Introduce num1

	Enviar "Introduce un número"
	Introduce num2

	Enviar "Introduce un número"
	Introduce num3


	Si num1 menor que 0
		result = num1 * num2 * num3
			Enviar "El producto de los tres números es: /n" + result
	si no
		result = num1 + num2 + num3
			Enviar "La suma de los tres números es: /n" + result


//6
	Integer num1
	Double result
	String excepcion, texto

	Enviar "Introduce un número"
	Introduce num1


	Si num1 es igual o menor a 0
		excepcion = "El número no puede ser igual o menor a 0"
			Enviar excepcion
		Salir
	y si num1 es mayor a 0
		result = num1 ^ 2
			texto = "Del número " + num1 + "su potencia es " + result

		result = RAID(num1)
			texto + ("y su raid " + result)

		Enviar texto
	Si no
		Enviar "No se a tenido en cuenta"


//7
	Integer alumnos, niños, niñas, result
	String texto

	Enviar "Introduce la cantidad de alumnos"
	Introduce alumnos

	Enviar "Introduce la cantidad de niños"
	Introduce niños

	Enviar "Introduce la cantidad de niños"
	Introduce niñas


		texto = "De los " + alumnos

		result = redondear(niños / alumnos * 100)
			texto + (", " + result + "son niños")

		result = redondear(niñas / alumnos * 100)
			texto + ("y " + result + "son niñas")


				Enviar texto


//8
	Float importe
	Float descuento
	String mes


	Enviar "Introduce el importe"
	Introduce importe

	Enviar "Introduce el mes"
	Introduce mes


	Si mes es igual a "octubre" es mayor que 0
		descuento = 15

		importe = importe - (descuento / importe) * 100
			Enviar "Como estamos a " + mes
			Esperar 1 segundos
			Enviar "Le aplicaremos un descuento del" + descuento + "%"
			Esperar 1 segundos
			Enviar "Nuevo importe: " + importe

	Si no
		Enviar "No se puede aplicar el descuento"


//9
	Integer num1, result


	Enviar "Introduce un número"
	Introduce num1


	Si num1 % 2 es igual a 0
		Enviar num1 + "es par"

	Si no
		Enviar num1 + "es impar"


//10
	Integer num1 = 0, result


	Mientras num1 sea 0
		Enviar "Introduce un número diferente de 0"
		Introduce num1
	Mientras_fin


		Si num1 % 2 es igual a 0
			Enviar num1 + "es par"

		Si no
			Enviar num1 + "es impar"


//11
	Boolean titulo = null
	Float prueba_acceso, nota_min = 6


	Mientras IGNORECASE(titulo) sea diferente de true o false
		Enviar "¿Tienes el título de bachiller? (true/false)"
		Introduce titulo
	Mientras_fin


	Si titulo = true
		Esperar 1
		Enviar "Felicidades!"
		Esperar 1
		Enviar "Has sido admitido en el ciclo :D"
	y Si titulo = false
		Mientras  prueba_acceso >= 0 y prueba_acceso <= 10
			Enviar "Introduce la nota de tu prueba de acceso"
			Introduce prueba_acceso
		Mientras_fin

		Si prueba_acceso >= nota_min
			Esperar 1
			Enviar "Felicidades!"
			Esperar 1
			Enviar "Has sido admitido en el ciclo :D"
	Si no
		Enviar "Lo siento mucho, pero necesitas como poco un título de bachiller o una nota mínima en la prueba de acceso mayor o igual a" + nota_min


//12
	Integer results


	Para  Integer naturals: los numeros entre 1 y 9 incluidos
		results = naturals ^ 2
		Enviar results
	Para_fin


//13
	Integer natural = 0, naturals_limit, result = 0
	Array naturals_list = new Array


	Enviar "Introduce la cantidad de números naturales a sumar"
	Introduce naturals_limit


	Mientras natural <= naturals_limit, natural++
		Insertar en naturals_list natural
	Mientras_fin


	Para  Integer naturals: los numeros almacenados en naturals_list
		result + naturals
	Para_fin


	Enviar "La suma da: " + result


//14
	Integer natural = 0, naturals_limit = 10, result = 0
	Array naturals_list = new Array

	/* NATURALS_LIMIT IMPUESTO */
	//Enviar "Introduce la cantidad de números naturales a sumar"
	//Introduce naturals_limit
	Enviar "Introduce el natural desde el cual quieres empezar a sumar"
	Introduce natural



	Mientras natural <= naturals_limit, natural++
		Insertar en naturals_list natural
	Mientras_fin


	Para  Integer naturals: los numeros almacenados en naturals_list
		Si naturals % 2 es igual a 0
			Enviar naturals + "añadido a la suma"
			result + naturals
	Para_fin


	Enviar "\nLa suma da" + result


//15
	String unformated
	Array formated
	Integer result = 0
	Integer counter = 0
	Integer naturals_average

	Enviar "Introduce una secuencia de números delimitados por comas (1,2,9,8,15)"
	Enviar "[Los números negativos no se tendrán en cuenta]"
	Introduce unformated


	Para Integer naturals_unformated: unformated.Delimitado_por(",")
		Si naturals % 2 es igual a 0 y naturals es diferente de -1
			Añadir naturals a formated
			counter + 1
		Si no
			Enviar "Se ha excluido" + naturals
	Para_fin

	Para  Integer naturals_formated: los números almacenados en formated
			Enviar naturals_formated + "añadido a la media"
			naturals_average = (naturals_formated / counter)
			result = (result + naturals_average)
	Para_fin

	Enviar "\nLa media da" + result


//16
	String password = "eureka"
	Boolean password_status = false
	Integer strikes = 0
	Integer strikes_limit = 3
	String input_text
	String output_text


	Enviar "Introduce la contraseña"
	Introduce input_text


	Mientras (strikes <= strikes_limit) o (password_status == true), strikes ++
		Si password == "eureka"
			password_status = true
		Si no 
			Enviar "[AVISO] Intento fallido" + "\n Restan: " + (strikes_limit - strikes)
	Mientras_fin


	Si password_status == true
		output_text + "\n[CORRECTO] Fin del programa..."
	Si no
		output_text + EXTERNAL.Color(red, "[FALLO]") + " Fin del programa..."


	Enviar output_text


//17
	Integer number
	Integer max = 0
	Integer min = 0
	Integer percentage
	Integer average = 0
	Integer counter = 0


	Mientras number != 0, counter++
		Enviar "\nIntroduce un número"
		Introduce number


		percentage = (number / counter)
		average = (average + percentage)


		Si number >= max
			max = number
		y Si number <= min y además counter != 1
			min = number
		Si no
			min = number


		Enviar "\nEl número más pequeño es: " + min
		Enviar "\nEl número más grande es: " + max
		Enviar "\nLa media es: " + average


		Enviar "[INFO] Para salir Introduce 0"
	Mientras_fin


//18
	Integer number
	Integer result_2 = 0
	Integer result_3 = 0


	Para  Integer numbers: los numeros del 1 al 100
		Si numbers % 2 == 0
			result_2 + numbers


		Si numbers % 3 == 0
			result_3 + numbers
	Para_fin


	Enviar "Estos números del 1 al 100 son multiplos de 2 " + result_2
	Enviar "Estos números del 1 al 100 son multiplos de 3 " + result_3


//19
	Integer day
	Integer month
	Integer year

	Integer day_limit

	String day_formated
	String month_formated
	String year_formated

	Boolean output_status = false
	String output_text

	Mientras output_status != true
		Enviar "Introduce el número de día"
		Introduce day

		Enviar "Introduce el número del mes"
		Introduce month

		Enviar "Introduce el número del año"
		Introduce year


		Si year < 0
			year_formated = (year + "ac");


		Si month == 1
			month_formated = "Enero"
			day_limit = 31
		y Si month == 2
			month_formated = "Febrero"
			day_limit = 30
		y Si month == 3
			month_formated = "Marzo"
			day_limit = 31
		y Si month == 4
			month_formated = "Abril"
			day_limit = 30
		y Si month == 5
			month_formated = "Mayo"
			day_limit = 31
		y Si month == 6
			month_formated = "Junio"
			day_limit = 30
		y Si month == 7
			month_formated = "Julio"
			day_limit = 31
		y Si month == 8
			month_formated = "Agosto"
			day_limit = 31
		y Si month == 9
			month_formated = "Septiembre"
			day_limit = 30
		y Si month == 10
			month_formated = "Octubre"
			day_limit = 31
		y Si month == 11
			month_formated = "Nomviembre"
			day_limit = 30
		Si no
			month_formated = "Diciembre"
			day_limit = 31


		Si day == day_limit
			day_formated = day
			output_text + day_formated
		y Si month >= 1 y <= 12
			output_status = true
			output_text + (" de " + month_formated)
		Si no 
			output_status = false


		Si output_status == true
			Enviar day_formated + month_formated + " de " + year_formated
		si no
			Enviar "[ERROR]"
	Mientras_fin


//20 -- PENDIENTE
	Boolean output_status = false

	Float max_result = 10

	Float teorical_per = 4 / max_result
	Float problems_per = 5 / max_result
	Float practical_per = 1 / max_result

	Float teorical
	Float problems
	Float practical

	Float result

	String output_text
	String student


	Mientras output_status != true
		Enviar "Introduce tu nombre"
		Introduce student

		Enviar "Introduce la nota de tu examen teórico"
		Introduce teorical

		Enviar "Introduce la nota de tu examen de problemas"
		Introduce problems

		Enviar "Introduce la nota de tu examen práctico"
		Introduce practical


		Si teorical >= 0 y problems >= 0 y practical >= 0 y además teorical <= max_result y problems <= max_result y practical <= max_result
			result = (teorical_per / teorical * 100) + (problems_per / problems * 100) + (practical_per / practical * 100)
			output_text = "Tienes una nota media de " + result
			output_status = true
		si no
			output_text = "[ERROR]"


		Enviar output_text
	Mientras_fin