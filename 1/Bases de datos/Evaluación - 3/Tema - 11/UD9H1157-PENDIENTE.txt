-- 1.	Crear una vista DEP30 que contiene el APELLIDO, el OFICIO, y el SALARIO de los empleados de la tabla EMPLE del departamento 30. Después comprobar descripción y contenido.
CREATE VIEW DEP30
  AS
    SELECT apellido, oficio, salario
    FROM emple
    WHERE dept_no = 30;

SELECT *
FROM DEP30;

-- 2.	Hacer lo mismo que en el ejercicio anterior dando nombres distintos a las columnas. Para reemplazar la vista, que ya existe al haberla creado en el ejercicio anterior, acuérdate de utilizar la sentencia OR REPLACE.
CREATE OR REPLACE VIEW DEP30
  AS
    SELECT apellido "ape", oficio "ofi", salario "sal"
    FROM emple
    WHERE dept_no = 30;

SELECT *
FROM DEP30;

-- 3.	Crear la vista VDEP a partir de la tabla DEPART con las columnas dept_no y dnombre. A partir de la vista anterior cambiar el nombre del departamento 20 a ‘nuevo20’.
CREATE VIEW VDEP
  AS
    SELECT dept_no, dnombre
    FROM depart;

UPDATE VDEP SET dnombre = 'nuevo20'
WHERE dept_no = 20;

-- 4.	Crear una vista a partir de las tablas EMPLE y DEPART que contenga las columnas EMP_NO, APELLIDO, DEPT_NO y DNOMBRE. Probar a insertar, a modificar y a borrar filas.
CREATE VIEW EJ4
  AS
    SELECT emp_no, apellido, dept_no, dnombre
    FROM emple NATURAL JOIN depart;

INSERT INTO EJ4 VALUES (8000, 'MOROS', 20, 'nuevo20');

UPDATE EJ4 SET dnombre = 'nuevo21'
  WHERE dnombre = 'nuevo20';

DELETE FROM EJ4
  WHERE dnombre = 'nuevo20';

-- 5.	Crear una vista llamada pagos a partir de las filas de la tabla EMPLE, cuyo departamento sea el 10. Las columnas de la vista se llamarán NOMBRE, SAL_MES. SAL_AN y DEPT_NO. El NOMBRE es la columna APELLIDO, al que aplicamos la función INITCAP(), SAL_MES es el SALARIO, SAL_AN es el salario*12. Modificar individualmente cada columna y ver qué ocurre.
CREATE OR REPLACE VIEW pagos
  AS
    SELECT INITCAP(apellido) AS Nombre, salario AS SAL_MES, (salario * 12) AS SAL_AN, DEPT_NO
    FROM emple
    WHERE dept_no = 10;
        
UPDATE pagos SET SAL_AN = 1000 WHERE Nombre = 'Rey';

-- 6.	Crear la vista VMEDIA a partir de las tablas EMPLE y DEPART. La vista contendrá por cada departamento el número de departamento, el nombre, la media de salario y el máximo salario. Visualizar su contenido y tratar de borrar filas, insertar y modificar.
CREATE VIEW vmedia
AS
  SELECT dept_no, dnombre, AVG(salario) "Media salario", MAX(salario) "Max salario"
  FROM emple NATURAL JOIN depart
  GROUP BY dept_no, dnombre;
  
DELETE FROM vmedia
  WHERE dnombre = 'nuevo20';

INSERT INTO vmedia VALUES (40, 'leguchino', 20, 30);

UPDATE vmedia SET dnombre = 'nuevo21'
  WHERE dnombre = 'nuevo20';

-- 7.	Crear el sinónimo DEPARTAMENTOS asociado a la tabla DEPART.
CREATE PUBLIC SYNONYM departamentos FOR depart;

-- 8.	Crear un sinónimo llamado Conser asociado a la vista creada antes (vmedia). Hacer consultas utilizando este sinónimo.
CREATE PUBLIC SYNONYM Conser FOR vmedia;

SELECT *
FROM vmedia

-- 9.	Conectarse como usuario SYSTEM a la base de datos de Oracle y crear un usuario llamado “administrador” autentificado por la base de datos con contraseña admin. Indicar como "tablespace" por defecto USERS y como "tablespace" temporal TEMP; asignar una cuota de 500K en el "tablespace" USERS. Consulta después la vista all_users e indica la información que aparece sobre él.
CREATE USER administrador IDENTIFIED BY admin
DEFAULT TABLESPACE USERS 
TEMPORARY TABLESPACE TEMP
QUOTA 500K ON USERS;

SELECT *
FROM all_users
WHERE username = 'ADMINISTRADOR';

 -- USERNAME, USER_ID, CREATED

-- 10.	Abrir una nueva conexión en sql developer e intentar conectarse como usuario  --“administrador”, ¿qué sucede?, ¿por qué?
 -- Estado: Fallo:Fallo de la prueba: ORA-01017: invalid username/password; logon denied
 -- Tienes que dar permiso de acceso al usuario a la base de datos

-- 11.	Averiguar qué privilegios de sistema, roles y privilegios sobre objetos tiene concedidos el usuario “administrador” consultando las vistas dba_role_privs, dba_tab_privs, dba_sys_privs (busca en Internet qué contienen cada una de estas vistas).
SELECT *
FROM dba_role_privs NATURAL JOIN dba_tab_privs NATURAL JOIN dba_sys_privs;

  -- dba_role_privs
 -- GRANTEE		Name of the user or role receiving the grant
 -- GRANTED_ROLE	Granted role name
 -- ADMIN_OPTION	Indicates whether the grant was with the ADMIN OPTION (YES) or not (NO)
 -- DEFAULT_ROLE	Indicates whether the role is designated as a DEFAULT ROLE for the user (YES) or not (NO)

  -- dba_tab_privs
 -- GRANTEE		Name of the user or role receiving the grant
 -- OWNER		Granted role name
 -- TABLE_NAME		Indicates whether the grant was with the ADMIN OPTION (YES) or not (NO)
 -- GRANTOR		Indicates whether the role is designated as a DEFAULT ROLE for the user (YES) or not (NO)

  -- dba_sys_privs
 -- GRANTEE		Grantee name, user, or role receiving the grant
 -- USERNAME		Name of the current user
 -- PRIVILEGE		System privilege
 -- ADMIN_OPTION	Grant was with the ADMIN option

-- 12.	Otorgar el privilegio “CREATE SESSION” al usuario “administrador” e intentar de nuevo la conexión sqlplus o sqldeveloper.
GRANT CREATE SESSION TO Administrador;
 -- Se ha conectado!

-- 13.	Modifica la contraseña del usuario administrador por admi y vuelve a acceder a Oracle con el usuario administrador. Comprueba que se ha modificado la contraseña.
ALTER USER Administrador IDENTIFIED BY "admi";
 -- funciona

-- 14.	Modifica el usuario administrador de forma que su cuenta esté bloqueada. Accede de nuevo con este usuario y comprueba que efectivamente no puede acceder a su cuenta.
ALTER USER Administrador ACCOUNT LOCK;
 -- Funciona

-- 15.	Conectarse como usuario “administrador” y crear un usuario llamado “prueba00” que tenga como "tablespace" por defecto USERS y como "tablespace" temporal TEMP; asignar una cuota de 500K en el "tablespace" USERS. ¿Es posible hacerlo?
ALTER USER Administrador ACCOUNT UNLOCK;

CREATE USER prueba00 IDENTIFIED BY prueba00
DEFAULT TABLESPACE USERS 
TEMPORARY TABLESPACE TEMP;
 -- No tengo permisos para crearlo

-- 16.	Conectado como usuario SYSTEM, otorgar el privilegio “create user” al usuario “administrador” y repetir el ejercicio anterior.
GRANT CREATE USER TO Administrador;

CREATE USER prueba00 IDENTIFIED BY prueba00
DEFAULT TABLESPACE USERS 
TEMPORARY TABLESPACE TEMP;
 -- Funciona

-- 17.	Crea un nuevo usuario prueba1 con clave prueba1 y tablespace users. Concédele el privilegio de connectarse a la BD. Trata de crear una tabla ¿Has podido? ¿Por qué? Concédele el privilegio CREATE TABLE y trata de crear de nuevo la tabla ¿Has podido?
 -- System
CREATE USER prueba1 IDENTIFIED BY prueba1
DEFAULT TABLESPACE USERS;
GRANT CREATE SESSION TO prueba1;

 -- prueba1
CREATE TABLE prueba1(
  id_test INTEGER PRIMARY KEY
);
   -- No tengo permisos para crearla

-- 18.	Asígnale una cuota de 500 K al usuario prueba1.
ALTER USER prueba1 QUOTA 500K ON USERS;

-- 19.	Como usuario prueba1, modifica su propia contraseña a pru1. ¿Puede modificar el propio usuario prueba1 su espacio de tablas por defecto? ¿Qué privilegio necesita? Asígnale dicho privilegio desde el usuario System y comprueba que ahora el usuario prueba1 puede modificarse a sí mismo su espacio de tabla o su cuota, por ejemplo.
 -- prueba1
ALTER USER prueba1 IDENTIFIED BY pru1;
ALTER USER prueba1 DEFAULT TABLESPACE USERS;
   -- No tiene permiso para cambiar el tablespace

 -- System
GRANT ALTER USER TO prueba1;
GRANT ALTER TABLESPACE TO prueba1;

 -- prueba1
ALTER USER prueba1 DEFAULT TABLESPACE USERS;

-- 20.	Como usuario administrador crea un nuevo usuario llamado ora1 con contraseña ora1 cuota 500k y espacios users y temp. Este nuevo usuario deberá poder conectarse a la BD y crear tablas. Crea una tabla para el usuario ora1¿Puedes insertar datos o manipular la tabla ? ¿Puedes crear procedimientos, triggers,… ? Indica qué privilegios necesitarías.
  -- System
CREATE USER ora1 IDENTIFIED BY ora1
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 500K ON USERS;
GRANT CREATE SESSION TO ora1;
GRANT CREATE TABLE TO ORA1;

  -- ora1
CREATE TABLE ora1(
  id_test INTEGER PRIMARY KEY
);

INSERT INTO ORA1 ID_TEST VALUES(1);
INSERT INTO ORA1 ID_TEST VALUES(2);
DELETE ora1 WHERE id_test = 1;
UPDATE ora1 SET id_test = 1
  WHERE id_test = 2;
ALTER TABLE ora1 ADD CONSTRAINT ora1_test_MIN1_MAX2 CHECK(id_test >= 1 AND id_test <= 2);

-- 21.	Como usuario administrador borra el usuario ora1. Indica los pasos que has tenido que realizar para poder hacerlo.
 -- System
GRANT DROP USER to administrador;

 -- administrador
DROP USER ora1 CASCADE;

-- 22.	Averiguar qué usuarios de la base de datos tienen asignado el privilegio “create user” de forma directa, ¿qué vista debe ser consultada? ¿Qué significa la opción ADMIN OPTION?
SELECT *
FROM dba_sys_privs
WHERE privilege = 'CREATE USER';
  -- La admin option sirve para saber si tienen la capacidad de ejecutar el grant del permiso

-- 23.	Hacer lo mismo para el privilegio “create session”.
SELECT *
FROM dba_sys_privs
WHERE privilege = 'CREATE SESSION';

-- 24.	En caso de que esté bloqueado, desbloquea el usuario hr de la base de datos y ponle como contraseña hr. Consulta las tablas de las que dispone este usuario.
  -- System
ALTER USER hr ACCOUNT UNLOCK;
ALTER USER hr IDENTIFIED BY hr;

  -- hr
select table_name from user_tables;

-- 25.	Concede permisos al usuario oracle4 para ejecutar consultas sobre la tabla employees del usuario hr (Crea previamente el usuario oracle4 con clave a 500k y tablespace users y temp, concédele privilegios para conectarse y crear tablas, crea una tabla en el usuario oracle4) Nota: previamente concede definitivamente al administrador el rol dba.
  -- System
CREATE USER oracle4 IDENTIFIED BY oracle4
DEFAULT TABLESPACE USERS
TEMPORARY TABLESPACE TEMP
QUOTA 500K ON USERS;
GRANT CREATE SESSION TO oracle4;
GRANT CREATE TABLE TO oracle4;
GRANT DBA TO administrador;
ALTER USER oracle4 QUOTA 1M ON USERS; -- Si no no podía crear la tabla
  -- oracle4
CREATE TABLE test1(
  id_test INTEGER PRIMARY KEY
);

-- 26.	Consulta los datos de la tabla employees (habiéndote conectado como usuario oracle4). Crear la tabla empleados a partir de la consulta anterior.
  -- Administrador
GRANT SELECT on hr.employees TO oracle4;

  -- oracle4
SELECT * FROM hr.employees;

-- 27.	Consulta los datos de la tabla countries de hr ¿Has podido? ¿Por qué?
  -- oracle4
SELECT * FROM hr.countries;

-- 28.	Concede permisos a oracle4 para insertar registros en la tabla countries de hr
  -- administrador
GRANT INSERT on hr.countries TO oracle4;
  -- oracle4
INSERT INTO "HR"."COUNTRIES" (COUNTRY_ID, COUNTRY_NAME, REGION_ID) VALUES ('O4', 'Test', 4);

-- 29.	Inserta el país España con código ES de Europa en la tabla countries como usuario oracle4
INSERT INTO "HR"."COUNTRIES" (COUNTRY_ID, COUNTRY_NAME, REGION_ID) VALUES ('ES', 'España', 1);

-- 30.	Trata de borrar como usuario oracle4 la fila que has insertado
DELETE HR.countries WHERE country_id = 'ES';
  -- No tiene permisos

-- 31.	Crea la tabla país como copia de countries desde el usuario HR.
CREATE TABLE pais
  AS
    SELECT * FROM countries;

-- 32.	Concede al usuario oracle4 permisos para borrar tablas de cualquier usuario. Borra desde el usuario oracle4 la tabla país del usuario hr.
DROP TABLE hr.pais;

-- 33.	Oracle4 concede a todos los usuarios (actuales y futuros) cualquier tipo de privilegio sobre la tabla que ha creado en el ejercicio 25.
GRANT ALL PRIVILEGES ON oracle4.test1 TO PUBLIC;

-- 34.	Crea en oracle4 una segunda tabla2 con 3 campos (campo1, campo2 y campo3) concede al usuario hr permisos para modificar solo la columna campo2. Trata ahora de modificar como usuario hr dos columnas de esa tabla, ¿permite hacerlo?
  -- administrador
GRANT UPDATE (campo2) on oracle4.tabla2 TO hr;

  -- hr
UPDATE oracle4.tabla2 SET campo2 = 2;
    -- funciona
UPDATE oracle4.tabla2 SET campo1 = 1;
    -- no funciona

-- 35.	Comprueba que desde oracle 4 puedes borrar la tabla countries.
DROP TABLE hr.countries;
  -- no la borra pero porque hay una clave foranea

-- 36.	Concede permisos al usuario oracle4 para que a su vez pueda crear usuarios así como darles cualquier privilegio.


-- 37.	Conéctate como usuario oracle4 y crea el usuario oracle4a con contraseña oracle4a espacio de tablas usuario y sin límite de cuota. Asígnale permisos de ejecución de consultas sobre la tabla jobs del usuario hr. Concede ahora privilegio de modificación sobre la columna coutry_name de la tabla countries a todos los usuarios
-- 38.	Comprueba desde el usuario hr qué permisos ha concedido sobre sus tablas a los demás usuarios. Comprueba desde el usuario oracle4 qué permisos ha recibido sobre las tablas de otros usuarios (usa la vista user_tab_privs).
-- 39.	Consulta los privilegios de sistema asignados a oracle4a ( usa la vista dba_sys_privs).
-- 40.	Estando conectado como usuario “administrador” probar a crear un rol llamado “administrador”, ¿qué ocurre?
-- 41.	Idem estando conectado como usuario SYSTEM, ¿qué sucede?, ¿por qué?
-- 42.	Comprobar en el diccionario de datos los usuarios o roles que poseen el privilegio “CREATE ROLE”. (Utiliza la vista dba_sys_privs).
-- 43.	Crear un rol llamado “ADMIN”, asignarle los privilegios “create session”, “create user” y “CREATE ROLE”. Asignarlo al usuario administrador.
-- 44.	Consultar los privilegios de sistema que tiene asignados de forma directa el usuario “administrador”, revocarlos y asignarle el rol “admin.”.
-- 45.	Crea el usuario usuario1 y asígnale el role connect y resource. Comprueba después en la vista correspondiente que efectivamente tiene esos roles. Comprueba también desde el EM que el usuario tiene marcados esos roles.
-- 46.	Crea el rol opera_jobs de modo que este rol adjudique permisos de selección, inserción y borrado sobre la tabla jobs del usuario HR. Y además tenga permisos para crear usuarios en la base de datos
-- 47.	Comprueba en las correspondientes vistas los permisos que tiene asociados el rol opera_jobs.
-- 48)	Crea un usuario oracle5 con contraseña oracle5, espacio de tablas usuarios y sin límite de cuota. Asígnale a oracle5 y oracle4 el rol opera jobs(en una sola sentencia). Accede con el usuario oracle5 y comprueba que puedes insertar la fila ('SA_TA', 'XXXXX', 200,9000) en la tabla jobs de hr.
-- 49)	Retira el privilegio create user del role opera_jobs.
-- 50)	Retira al usuario oracle5 el rol opera_jobs.
-- 51)	Borra el rol opera_jobs.
-- 52)	Si cuando creamos un usuario no le asignamos ningún perfil, ¿qué perfil le adjudica ORACLE?Entra en la vista dba_profiles y comprueba los valores de los campos asociados al perfil DEFAULT.
--	a. ¿Cuántas sesiones concurrentes por usuario permite ?
--	b.¿Cuál es el límite de tiempo de inactividad?
--	c. ¿Cuál es el máximo tiempo que una sesión puede permanecer inactiva?
--	d.¿Cuántos intentos consecutivos fallidos permite antes de bloquear la cuenta? FAILED_LOGIN_ATTEMPTS.
-- 53)	Crea el perfil pruebas1 (desde el usuario administrador) de modo que solo pueda haber 2 sesiones concurrentes por usuario, el tiempo de inactividad será un máximo de 2’ y el nº de intentos fallidos antes de bloquear la cuenta 2. Indica los pasos realizados.
-- 54)	Modifica el usuario oracle4 de modo que su perfil sea pruebas1 y comprueba que se cumplen las condiciones del perfil alter user oracle4 profile pruebas1.
-- 55)	Modifica el perfil pruebas1 cambiando el tiempo de inactividad a 3’ y el tiempo de sesión a 400’.
-- 56)	Comprueba a través de la vista de perfiles cuales son los nuevos valores asignados.
-- 57)	Borra el perfil pruebas1