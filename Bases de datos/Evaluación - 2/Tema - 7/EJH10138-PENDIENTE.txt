-- 1)	Mostrar los nombres de todos nuestros proveedores.
SELECT nombre
FROM proveedores;

-- 2)	Mostrar el nombre y el precio de cada uno de nuestros productos.
SELECT nombre, precio_venta
FROM productos;

-- 3)	¿De qué provincias son nuestros clientes? (Que no se repitan las provincias en el resultado de la consulta).
SELECT provincia
FROM clientes
GROUP BY provincia;

-- 4)	Mostrar toda la información de nuestros empleados.
SELECT *
FROM empleados;

-- 5)	Muestra las ciudades de nuestros proveedores en orden alfabético junto con los nombres de los proveedores con los que trabajamos en cada ciudad.
SELECT nombre, ciudad
FROM proveedores
ORDER BY ciudad;

-- 6)	Haz un listado de la página web de cada uno de nuestros proveedores con el siguiente formato (no hay que mostrar los datos en caso de que no tengan página web). http://www.shinoman.com/ es la pag web de Shinoman, Incorporated
SELECT pag_web || ' es la pag web de ' || nombre AS "Páginas de los proveedores"
FROM proveedores
WHERE pag_web IS NOT NULL;

-- 7)	¿Cuántos días cuesta el envío de cada pedido?
SELECT numero_pedido, fecha_envio - fecha_pedido AS "Espera hasta el día de envío"
FROM pedidos;

-- 8)	¿Cuál es el valor de inventario de cada producto? (El valor de inventario – aunque realmente no se hace así - lo consideraremos como el precio de venta de cada producto por el stock que hay en la tienda).
SELECT numero_producto, precio_venta * stock
FROM productos;

-- 9)	Mostrar el precio de cada producto reducido en un 5%.
SELECT numero_producto, precio_venta - precio_venta * 0.05
FROM productos;

-- 10)	Mostrar la lista de los pedidos que han hecho nuestros clientes en orden descendente de fecha. Hay que ver los pedidos de cada cliente seguidos.
SELECT *
FROM pedidos
ORDER BY ID_cliente, fecha_pedido DESC;

-- 11)	Mostrar la lista de los nombres y direcciones de nuestros proveedores ordenados alfabéticamente por el nombre del proveedor.
SELECT nombre, direccion
FROM proveedores
ORDER BY nombre;

-- 12)	Mostrar el nombre y apellido de los clientes cuyo apellido sea Sanz.
SELECT nombre, apellidos
FROM clientes
WHERE apellidos LIKE '%Sanz%';

-- 13)	¿Cuáles son los nombres de los clientes que viven en la provincia de MADRID?
SELECT nombre
FROM clientes
WHERE provincia LIKE 'MADRID';

-- 14)	Mostrar el nombre y apellido de los clientes que (una consulta para cada punto):
-- •	viven en la provincia de MADRID
SELECT nombre, apellidos
FROM clientes
WHERE provincia = 'MADRID';

-- •	viven en Belmonte
SELECT nombre, apellidos
FROM clientes
WHERE UPPER(ciudad) = 'BELMONTE';

-- •	tienen como código postal 45915
SELECT nombre, apellidos
FROM clientes
WHERE cod_postal = 45915;

-- •	que hicieron pedidos en Mayo
SELECT nombre, apellidos
FROM clientes
WHERE id_cliente IN
  (SELECT id_cliente
    FROM pedidos
    WHERE EXTRACT(MONTH FROM fecha_pedido) = 5);

-- 15)	¿Hay pedidos en los que la fecha de envío fue puesta accidentalmente anterior a la fecha de pedido?
SELECT *
FROM pedidos
WHERE (fecha_envio - fecha_pedido < 0);

-- 16)	Mostrar el nombre y apellidos de los clientes cuyos apellidos empiezan por 'Pe'.
SELECT nombre, apellidos
FROM clientes
WHERE apellidos LIKE 'Pe%';

-- 17)	Mostrar el nombre y dirección de los proveedores cuya dirección incluya la cadena 'del'.
SELECT nombre, direccion
FROM proveedores
WHERE direccion LIKE '%del%';

-- 18)	Listar el nombre y apellidos de los clientes que viven en Somosierra y cuyo apellido empieza con la letra ‘S’.
SELECT nombre, apellidos
FROM clientes
WHERE
  UPPER(ciudad) = 'SOMOSIERRA' AND
  UPPER(apellidos) LIKE 'S%';

-- 19)	Listar el nombre y apellidos de los clientes que viven en Somosierra o en la provincia de ORENSE.
SELECT nombre, apellidos
FROM clientes
WHERE
  UPPER(ciudad) = 'SOMOSIERRA' OR
  UPPER(provincia) = 'ORENSE';

-- 20)	Mostrar una lista de los nombres y número de teléfono de los proveedores de las provincias de MADRID y CACERES.
SELECT nombre, telefono
FROM clientes
WHERE
  UPPER(provincia) = 'MADRID' OR
  UPPER(provincia) = 'CACERES';

-- 21)	Mostrar los datos de los pedidos del cliente 1001 en los que las fechas de pedido y envío coincidan.
SELECT *
FROM PEDIDOS
WHERE
  id_cliente = 1001 AND
  fecha_pedido = fecha_envio;

-- 22)	Mostrar los datos de los pedidos del cliente 1001 o que cumplan que la fecha de envío es 4 días posterior a la fecha de pedido.
SELECT *
FROM PEDIDOS
WHERE
  id_cliente = 1001 OR
  (fecha_envio - fecha_pedido) <= 4;

-- 23)	Mostrar nombre, apellidos, provincia y código postal de los clientes que se apelliden Pelayo en la provincia de CACERES o de los clientes cuyo código postal termine en 9.
SELECT nombre, apellidos, provincia, cod_postal
FROM clientes
WHERE
  (LOWER(apellidos) = 'pelayo' AND
   LOWER(provincia) = 'caceres')
  OR 
  (cod_postal LIKE '%9');

-- 24)	Mostrar nombre, apellidos, provincia y código postal de los clientes que se apelliden Pelayo y de cualquier otro cliente que viva en la provincia de CACERES o tenga un código postal que termine en 9.
SELECT nombre, apellidos, provincia, cod_postal
FROM clientes
WHERE
  LOWER(apellidos) = 'pelayo' OR
  LOWER(provincia) = 'caceres' OR
  cod_postal LIKE '%9';

-- 25)	Mostrar los datos de los proveedores que tienen su sede en CACERES, ORENSE o MADRID.
SELECT *
FROM proveedores
WHERE 
  LOWER(ciudad) = 'caceres' OR
  LOWER(ciudad) = 'orense' OR
  LOWER(ciudad) = 'madrid';

-- 26)	Listar los clientes cuyo apellido empieza por H.
SELECT *
FROM clientes
WHERE apellidos LIKE 'H%';

-- 27)	Listar los clientes que no viven en Robledo ni en Somosierra.
SELECT *
FROM clientes
WHERE
  ciudad != 'Somosierra' OR
  ciudad != 'Robledo';

-- 28)	Mostrar el número de pedido, el id_cliente y la fecha de pedido de todos los pedidos que ha realizado el cliente 1001 ordenado por fecha de pedido.
SELECT clientes.id_cliente, numero_pedido, fecha_pedido
FROM clientes, pedidos
WHERE
  pedidos.id_cliente = clientes.id_cliente AND
  pedidos.id_cliente = 1001
  ORDER BY (fecha_pedido);

-- 29)	Mostrar un listado en orden alfabético de los nombres de productos que empiezan por 'Dog'.
SELECT nombre
FROM productos
WHERE nombre LIKE 'Dog%';

-- 30)	Listar los nombres de todos los proveedores con sede en Batres, Belmonte o Robledo.
SELECT nombre
FROM proveedores
WHERE
  ciudad = 'Batres' OR
  ciudad = 'Belmonte' OR
  ciudad = 'Robledo';

-- 31)	Mostrar en orden alfabético la lista de los nombres de productos cuyo precio de venta sea igual o superior a 125.00 euros.
SELECT nombre
FROM productos
WHERE
  precio_venta >= 125;

-- 32)	Listar en orden alfabético los nombres de los proveedores que no tienen página web.
SELECT nombre
FROM proveedores
WHERE
  pag_web IS NULL
  ORDER BY nombre;
-- 33)	Intersección: Listar los número de pedidos en los que se han pedido tanto bicicletas  (sabiendo que sus números de producto son 1, 2, 6 y 11) como cascos (sabiendo que sus números de producto son 10, 25 y 26).
SELECT pedidos.numero_pedido
FROM pedidos, detalles_pedidos
WHERE
  pedidos.numero_pedido = detalles_pedidos.numero_pedido AND
  (detalles_pedidos.numero_producto = 1 OR
  detalles_pedidos.numero_producto = 2 OR
  detalles_pedidos.numero_producto = 6 OR
  detalles_pedidos.numero_producto = 10 OR
  detalles_pedidos.numero_producto = 11 OR
  detalles_pedidos.numero_producto = 25 OR
  detalles_pedidos.numero_producto = 26);

-- 34)	Diferencia: Listar los número de pedidos que han comprado alguna bicicleta (sabiendo que sus números de producto son 1, 2, 6 y 11)  pero no cascos (sabiendo que sus números de producto son 10, 25 y 26). 
-- 35)	Unión: Listar los número de pedidos que han comprado alguna bicicleta (sabiendo que sus números de producto son 1, 2, 6 y 11)  o algún casco (sabiendo que sus números de producto son 10, 25 y 26). Hacerlo de dos maneras, haciendo uso de UNION y sin hacer uso de UNION.
-- 36)	Clientes y empleados que tienen el mismo nombre.
-- 37)	Clientes cuyos nombres no coinciden con los de ningún empleado.
-- 38)	Ciudades en las que viven clientes pero ningún empleado.